# check that web services are running
define service {
        hostgroup_name                  http-qa1-servers
        service_description             HTTP
 	check_command                   check_http_qa1
        use                             qa-service
	notification_interval           0 ; set > 0 if you want to be renotified
}

define service {
        hostgroup_name                  http-qa2-servers
        service_description             HTTP
        check_command                   check_http_qa2
        use                             qa-service
        notification_interval           0 ; set > 0 if you want to be renotified
}


define service {
        hostgroup_name                  http-admin-servers
        service_description             HTTP
        check_command                   check_http_admin
        use                             generic-service
        notification_interval           0 ; set > 0 if you want to be renotified
}



define service {
        hostgroup_name                  http-prod-servers
        service_description             HTTP
        check_command                   check_http_prod!www.nicerelease.com
        use                             generic-service
        notification_interval           0 ; set > 0 if you want to be renotified
}

# check that ssh services are running
define service {
        hostgroup_name                  ssh-servers
        service_description             SSH
	check_command                   check_ssh
        use                             generic-service
	notification_interval           0 ; set > 0 if you want to be renotified
}


define service {
        hostgroup_name                  redis-servers
        service_description             redis server status 
        check_command                   check_redis
        use                             generic-service
        notification_interval           0 ; set > 0 if you want to be renotified
}

#define service{
#        use                             generic-service         ; Name of service template to use
#
#        hostgroup_name                      mysql-repl
#        service_description             MySQL Replication Check
#        is_volatile                     0
#        check_period                    24x7
#        max_check_attempts              3
#        normal_check_interval           5
#        retry_check_interval            1
#        notification_interval           15
#        notification_period             24x7
#        notification_options            u,c,r
#        check_command                     check_mysql_slave!nagios!nagiosadnim
#	contact_groups			dbadmins
#        } 
define service{
        use                             generic-service         ; Name of service template to use

        hostgroup_name                      mysql
        service_description             MySQL Login Check
        is_volatile                     0
        check_period                    24x7
        max_check_attempts              3
        normal_check_interval           5
        retry_check_interval            1
        notification_interval           15
        notification_period             24x7
        notification_options            u,c,r
        check_command                    check_mysql_cmdlinecred!nagios!nagiosadmin
	contact_groups		        root	
        } 
		
define service{
        use                             generic-service         ; Name of service template to use

        hostgroup_name                      mysql-prod
        service_description             MySQL Login Prod Check
        is_volatile                     0
        check_period                    24x7
        max_check_attempts              3
        normal_check_interval           5
        retry_check_interval            1
        notification_interval           15
        notification_period             24x7
        notification_options            u,c,r
        check_command                    check_mysql_cmdlinecred!dbprod!cRl&16es
        contact_groups                 root 
        }

#define service {
#		use				generic-service
#		hostgroup_name                  magentofe
#        service_description             Magento Check
#        check_period                    24x7
#        max_check_attempts              3
#        normal_check_interval           5
#        retry_check_interval            1
#        contact_groups                  admins
#        notification_interval           30
#        notification_period             24x7
#        notification_options            w,u,c,r
#        		#check_command			check_http_resp
#        		check_command			check_http_resp!"/elbtest.php"!"works"
#		check_command			check_http_resp!80!/test.php!"com ok<br>select ok"
#}		


#define service {
#        use                             generic-service
#        hostgroup_name                  jenkins
#        service_description             jenkins Check
#        check_period                    24x7
#        max_check_attempts              3
#        normal_check_interval           5
#        retry_check_interval            1
#        contact_groups                  admins
#        notification_interval           30
#        notification_period             24x7
#        notification_options            w,u,c,r
#        check_command                   check_tcp!80
#}	

define service {
        use                             generic-service
        hostgroup_name                  puppet-master
        service_description             puppet master Check
        check_period                    24x7
        max_check_attempts              3
        normal_check_interval           5
        retry_check_interval            1
        contact_groups                  root 
        notification_interval           30
        notification_period             24x7
        notification_options            w,u,c,r
        check_command                   check_tcp!8140
}	




#define service {
#        use                             generic-service
#        hostgroup_name                  report
#        service_description             open reports Check
#        check_period                    24x7
#        max_check_attempts              3
#        normal_check_interval           5
#        retry_check_interval            1
#        contact_groups                  admins
#        notification_interval           30
#        notification_period             24x7
#        notification_options            w,u,c,r
#        check_command                   check_http_tomcat!/openreports/!8080
#        check_command                   check_tcp!80
#
#}	


		###########COMMANDS


define command{
        command_name    check_mysql_slave
        command_line    $USER1$/check_mysql -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$ -S -w 900 -c 1800
        }

define command{
        command_name    check_mysql_login
        command_line    $USER1$/check_mysql -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$ 
        }



# 'check_http_resp' command definition
define command {
	command_name	check_http_resp
    #command_line	$USER1$/check_http -H $ARG1$ -I $HOSTADDRESS$    -w 4 -c 8	
    #command_line	$USER1$/check_http -H $ARG1$ -I $HOSTADDRESS$  -u $ARG2$ -R $ARG3$ -w 4 -c 8	
    #command_line	$USER1$/check_http -H $ARG1$ -I $HOSTADDRESS$ -p $ARG2$ -u $ARG3$ -R $ARG4$ -w 4 -c 8
    command_line    $USER1$/check_http -H $HOSTADDRESS$ -u $ARG1$ -R $ARG2$ -w 4 -c 8
	}	

define command{
        command_name    check_http_tomcat
        command_line    $USER1$/check_http -H $HOSTADDRESS$ -u $ARG1$ -p $ARG2$
        }
# A simple configuration file for monitoring the local host
# This can serve as an example for configuring other servers;
# Custom services specific to this host are added here, but services
# defined in nagios2-common_services.cfg may also apply.
# 
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                       all
        service_description             Disk Space
        check_command                   check_all_disks!20%!10%
        }



# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                       all
        service_description             Current Users
        check_command                   check_users!20!50
        }


# Define a service to check the number of currently running procs
# on the local machine.  Warning if > 250 processes, critical if
# > 400 processes.

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                       all
        service_description             Total Processes
		check_command                   check_procs!250!400
        }



# Define a service to check the load on the local machine. 

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                       all
        service_description             Current Load
		check_command                   check_load!5.0!4.0!3.0!10.0!6.0!4.0
        }

define service {
    use                 generic-service
    hostgroup_name          Mongo Servers18
    service_description     Mongo Connect Check
    check_command           check_mongodb!connect!27018!2!4
}

define service {
    use                 generic-service 
    hostgroup_name          Mongo Servers17
    service_description     Mongo Connect Check
    check_command           check_mongodb!connect!27017!2!4
}

